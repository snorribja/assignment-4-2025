name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  run-unit-tests:
    name: Run Unit Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Project Packages
        run: npm ci

      - name: Execute Tests
        run: npm run test

  run-e2e-tests:
    name: Run E2E Test Suite
    runs-on: ubuntu-latest
    needs: run-unit-tests

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Runtime
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Install Browsers (Playwright)
        run: npx playwright install --with-deps

      - name: Load Environment Variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          cat .env
          export $(cat .env | xargs)
          npx prisma migrate deploy

      - name: Wipe & Reset DB
        run: |
          echo "Resetting DB for clean test state..."
          npx prisma migrate reset --force

      - name: Build Application
        run: npm run build

      - name: Launch Server in Background
        run: |
          nohup npm run start -- -p 3000 > nextjs.log 2>&1 &
          sleep 5
        env:
          NODE_ENV: production
          PORT: 3000

      - name: Output Server Logs on Failure
        if: failure()
        run: cat nextjs.log

      - name: Await Server Readiness
        run: |
          echo "Waiting for app to become ready..."
          for i in {1..60}; do
            STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:3000 || echo "000")
            if [[ "$STATUS" == "200" ]]; then
              echo "App is live!"
              break
            fi
            echo "Retrying... ($i)"
            sleep 2
          done
        timeout-minutes: 3

      - name: Run E2E via Playwright
        run: E2E_TEST=true npm run test:e2e

      - name: Save Test Artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: test-results/
